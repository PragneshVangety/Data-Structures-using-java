2.1 Linear / Sequential Search

import java.util.Scanner;
class Main{
    public static int LinearSearch(int arr[],int key){
        for(int i=0;i<arr.length;i++){
            if(arr[i]==key)
            {
                return i;
            }
        }
        return -1;
    }
    public static void main(String args[]){
     Scanner sc = new Scanner(System.in);
     int n = sc.nextInt();
     int arr[]=new int[n];
     for(int i=0;i<n;i++){
         arr[i]=sc.nextInt();
     }
     int key=sc.nextInt();
     System.out.println(LinearSearch(arr,key));
    }
}
================================================
2.2 Binary Search

import java.util.Scanner;
public class Main{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();  
        String[] input = scanner.nextLine().split(" ");
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(input[i]);
        }
        int x = scanner.nextInt();
        int result = binarySearch(arr, 0, n - 1, x);
        System.out.println(result);
        scanner.close();
    }
    public static int binarySearch(int[] arr, int left, int right, int x) {
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (arr[mid] == x) {
                return mid;  
            }
            if (arr[mid] > x) {
                right = mid - 1;
            }
            else {
                left = mid + 1;
            }
        }
        return -1;
    }
}
====================================================
2.3  Uniform Binary Search

import java.util.Scanner;
class Main{
    public static int UniformBinarySearch(int arr[],int key){
        int low = 0;
        int high =arr.length-1;
        int lookup[]={5,2,1,0};
        for(int i:lookup){
            int mid = low+i;
            if(i>high){
                high = i;
            }
            if(arr[mid]==key){
                return mid;
            }
            else if(arr[mid]<key){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
            if(low<=high && arr[low]==key){
                return low;
            }
        }
        return -1;
        
    }
	public static void main(String[] args){
	 Scanner sc = new Scanner(System.in);
	 int n = sc.nextInt();
	 int arr[]=new int[n];
	 for(int i=0;i<n;i++){
	     arr[i]=sc.nextInt();
	 }
	 int key = sc.nextInt();
	 System.out.println(UniformBinarySearch(arr,key));
	}
}
=========================================================
2.4   Interpolation Search

import java.util.Scanner;
class Main{
    public static int Interpolation(int arr[],int key){
        int low = 0;
        int high = arr.length-1;
        while(low<=high){
            int pos =low + (high-low)*((key-arr[low])/(arr[high]-arr[low]));
            if(arr[pos]==key){
                return pos;
            }
            else if(arr[pos]<key){
                low=pos+1;
            }
            else{
                high =pos-1;
            }
        }
        return -1;
    }
	public static void main(String[] args){
		//write your code here
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int arr[] = new int[n];
		for(int i=0;i<n;i++){
		    arr[i]=sc.nextInt();
		}
		int target=sc.nextInt();
		System.out.println(Interpolation(arr,target));
	}
}
=====================================================
2.5  Fibonacci Search

import java.util.Scanner;
class Main{
    public static int LinearSearch(int arr[],int key){
        for(int i=0;i<arr.length;i++){
            if(arr[i]==key)
            {
                return i;
            }
        }
        return -1;
    }
    public static void main(String args[]){
     Scanner sc = new Scanner(System.in);
     int n = sc.nextInt();
     int arr[]=new int[n];
     for(int i=0;i<n;i++){
         arr[i]=sc.nextInt();
     }
     int key=sc.nextInt();
     System.out.println(LinearSearch(arr,key));
    }
}



